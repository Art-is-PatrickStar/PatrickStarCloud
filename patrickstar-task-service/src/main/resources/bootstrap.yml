spring:
  application:
    name: patrickstar-task-service
  profiles:
    active: dev  # 开发环境
  main:
    allow-bean-definition-overriding: true

  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848  # 配置nacos地址
      config:
        server-addr: localhost:8848  # nacos配置中心地址
        file-extension: yaml  # 配置文件格式
        group: DEFAULT_GROUP
        # 公共配置文件
        ext-config:
          - data-id: patrickstar-${spring.profiles.active}.yaml
            group: DEFAULT_GROUP
            refresh: true  # 是否允许自动刷新

    sentinel:
      eager: true  # 取消控制台懒加载
      transport:
        dashboard: localhost:9090  # sentinel dashboard地址
        port: 8719  # sentinel api port
      # sentinel配置持久化
      datasource:
        ds1:
          nacos:
            server-addr: localhost:8848
            dataId: ${spring.application.name}
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: flow

  mail:
    host: smtp.qq.com
    username: 2544894086@qq.com
    password: uvfpmqyyzdgleahd
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          port: 465
          starttls:
            enable: true
            required: true
          ssl:
            enable:
              true
        debug: false

  kafka:
    listener:
      # 批量监听开启
      type: batch
      # 在侦听器容器中运行的线程数
      concurrency: 3
      # 当enable.auto.commit的值设置为false时,该值会生效,为true时不会生效
      # 每处理完业务手动调用Acknowledgment.acknowledge()后立即提交
      ack-mode: manual_immediate
    # 消费者全局配置
    consumer:
      bootstrap-servers: 127.0.0.1:9092
      group-id: taskService-consumer
      # 是否开启自动提交 offset 功能
      enable-auto-commit: false
      # 如果'enable.auto.commit'为true,则消费者偏移自动提交给Kafka的频率(毫秒)
      auto-commit-interval: 1000
      # key反序列化
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # value反序列化
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      # 当Kafka中没有初始偏移量或者服务器上不再存在当前偏移量时该怎么办，默认值为latest，表示自动将偏移重置为最新的偏移量
      auto-offset-reset: earliest
      # 一次调用poll()操作时返回的最大记录数
      max-poll-records: 10
      properties:
        session.timeout.ms: 15000
        retry.backoff.ms: 100
    # 生产者全局配置
    producer:
      bootstrap-servers: 127.0.0.1:9092
      # key序列化
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # value序列化
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
      # 当所有的follower都同步消息成功后发送ack。不仅是主的分区将消息保存成功了，而且其所有的分区的副本数也都同步好了，才会被认为发动成功。
      acks: -1
      # 当producer接收到error ACK,或者没有接收到ACK时,允许消息重发的次数
      retries: 3

# xxl-job配置
xxl:
  job:
    ### xxl-job admin address list, such as "http://address" or "http://address01,http://address02"
    admin:
      addresses: http://127.0.0.1:8088/xxl-job-admin
    ### xxl-job, access token
    accessToken:
    ### xxl-job executor appname
    executor:
      appname: patrick-star-wsw-task-excutor
      ### xxl-job executor registry-address: default use address to registry , otherwise use ip:port if address is null
      address:
      ### xxl-job executor server-info
      ip:
      port: 9999
      ### xxl-job executor log-path
      logpath: /data/applogs/xxl-job/jobhandler
      ### xxl-job executor log-retention-days
      logretentiondays: 7
